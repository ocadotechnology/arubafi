# This workflows will upload a Python Package using Twine when a release is created and tagged
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
---
name: Depolying the package to prod PyPi

on:
  release:
    types: [released]
    tags:
      - v[0-9].[0-9]+.[0-9]


jobs:
  build_and_test:
    name: Build and Test the module
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1

    - name: Build dependancies
      run: pip install -r requirements.txt

    - name: Install dependencies for PyPi test upload
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pytest

    - name: Test with pytest
      run: pytest

    - name: Install localy
      run: pip install -e .

  #Â Deploy it to Prod PyPi
  deploy:
    name: Deploy to production PyPi
    needs: build_and_test
    runs-on: ubuntu-latest

    # Only deploy if a new tag has been created
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Check out repository
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Build dependancies
      run: |
        pip install -r requirements.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build sdist bdist_wheel
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_TOKEN_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PROD_TOKEN }}
      run: |
        twine upload dist/*
